#include <math.h>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable : 4244)
#pragma warning(disable : 4305)
#endif

#include <catch2/catch_all.hpp>
#include <cereal/archives/binary.hpp>
#include "catch2/catch_approx.hpp"
#include "catch2/catch_test_macros.hpp"
#include "nlohmann/json_fwd.hpp"

// #include <move/vectormath.hpp>
#include <move/vectormath/octahedral.hpp>
#include <move/vectormath/vec2.hpp>
#include <move/vectormath/vec3.hpp>
#include <move/vectormath/vec3_rtm.hpp>
#include <move/vectormath/vec3_scalar.hpp>

#include "mvm_test_utils.hpp"

#define MVM_IS_TEST_INCLUDE

#define MVM_TEST_VEC2_TYPE vec2f32
#define MVM_TEST_VEC3_TYPE vec3f32_rtm
#include "octahedral-mapping-tests.ixx"

// #define MVM_TEST_VEC2_TYPE vec2f64
// #define MVM_TEST_VEC3_TYPE vec3f64_rtm
// #include "octahedral-mapping-tests.ixx"

// #define MVM_TEST_VEC2_TYPE vec2f32
// #define MVM_TEST_VEC3_TYPE vec3f32_scalar
// #include "octahedral-mapping-tests.ixx"

// #define MVM_TEST_VEC2_TYPE vec2f64
// #define MVM_TEST_VEC3_TYPE vec3f64_scalar
// #include "octahedral-mapping-tests.ixx"

// #define MVM_TEST_VEC2_TYPE vec2i8
// #define MVM_TEST_VEC3_TYPE vec3i8_scalar
// #include "octahedral-mapping-tests.ixx"

// #define MVM_TEST_VEC2_TYPE vec2i16
// #define MVM_TEST_VEC3_TYPE vec3i16_scalar
// #include "octahedral-mapping-tests.ixx"

// #define MVM_TEST_VEC2_TYPE vec2i32
// #define MVM_TEST_VEC3_TYPE vec3i32_scalar
// #include "octahedral-mapping-tests.ixx"

// #define MVM_TEST_VEC2_TYPE vec2i64
// #define MVM_TEST_VEC3_TYPE vec3i64_scalar
// #include "octahedral-mapping-tests.ixx"

#undef MVM_IS_TEST_INCLUDE

#ifdef _MSC_VER
#pragma warning(pop)
#endif